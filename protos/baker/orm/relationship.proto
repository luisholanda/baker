syntax = "proto3";

package baker.orm;

import "google/protobuf/descriptor.proto";

// TODO: refactor these options.
//
// Currently they incentivise storing children/parents inside messages,
// which can cause N+1 query problems, complicate desnecessarily the
// API interface, or increasing the payload sizes.
//
// What we should support is simillar to what diesel does: many-to-one
// and one-to-one relations, and maybe a way of aggregating then automatically
// in a message.

extend google.protobuf.FieldOptions {
  // Links the field type with the current message with a relationship.
  baker.orm.RelationshipType relationship = 2011;
  // The related type when using a ID-only relationship type.
  string related_type = 2012;
}

// Possible semantic types of relationship between entities.
enum RelationshipType {
  // Conventional default, don't use.
  RELATIONSHIP_UNSPECIFIED = 0;

  // The field contains children of the entity.
  CHILDREN = 1;

  // The field contains the parent of the entity.
  PARENT = 2;

  // The field contains the ID of the entity's parent.
  //
  // When using this relationship type, is necessary to also
  // set the `baker.orm.related_type` option.
  PARENT_ID = 3;
}
