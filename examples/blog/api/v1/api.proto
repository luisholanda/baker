syntax = "proto3";

package blog.api.v1;

// A user in the service.
message User {
  // ID of the user.
  int64 id = 1 [ (baker.api.field_behavior) = OUTPUT_ONLY ];
  // Name of the user.
  string name = 2 [ (baker.api.field_behavior) = IMMUTABLE ];

  // Idenfier of the user.
  oneof identifier {
    // The user used an email to identify himself.
    string email = 3 [ (baker.api.field_behavior) = IMMUTABLE ];
    // The user used a username to identify himself.
    string username = 4 [ (baker.api.field_behavior) = IMMUTABLE ];
  };
}

// A post in the service.
message Post {
  // A comment on a post in the service.
  message Comment {
    // ID of the comment.
    int64 id = 1 [ (baker.api.field_behavior) = OUTPUT_ONLY ];
    // ID of the post where this comment was posted.
    int64 post_id = 2 [
      (baker.api.field_behavior) = IMMUTABLE,
      (baker.orm.releationship) = PARENT_ID,
      (baker.orm.related_type) = "blog.api.v1.Post",
    ];
    // Author of the comment.
    User author = 3 [
      (baker.api.field_behavior) = IMMUTABLE,
      (baker.orm.releationship) = PARENT,
    ];
    // Content of the comment.
    string content = 4 [ (baker.api.field_behavior) = IMMUTABLE ];
  }

  // Possible formats of content in a Post.
  enum ContentFormat {
    // The post was written in plain text.
    PLAIN_TEXT = 0;
    // The post was written in markdown.
    MARKDOWN = 1;
  }

  // ID of the post.
  int64 id = 1;
  // Title of the post.
  string title = 2 [ (baker.api.field_name) = "post_title" ];
  // Likes of the post.
  uint32 likes = 3 [ (baker.api.field_behavior) = OUTPUT_ONLY ];
  // Dislikes of the post.
  uint32 dislikes = 3 [ (baker.api.field_behavior) = OUTPUT_ONLY ];
  // Author of the post.
  User author = 4 [
    (baker.api.field_behavior) = IMMUTABLE,
    (baker.orm.relationship) = PARENT,
  ];
  // Content of the post.
  string content = 5;
  // Format used in `content`.
  ContentFormat content_format = 6;
  // All comments in the post.
  repeated Comment comments = 7 [
    (baker.api.field_behavior) = OUTPUT_ONLY,
    (baker.orm.releationship) = CHILDREN,
  ];
}
